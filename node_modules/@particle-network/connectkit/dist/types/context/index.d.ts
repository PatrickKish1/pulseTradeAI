import React, { type ReactNode } from 'react';
import { type Config } from '../createConfig';
import type { ConnectKitOptions } from './types';
type ContextValue = {
    options: ConnectKitOptions;
    config: Config;
};
export declare const Context: React.Context<ContextValue | null>;
export type ConnectKitProviderProps = {
    children?: ReactNode;
    config: Config;
    reconnectOnMount?: boolean | undefined;
};
export declare const ConnectKitProvider: (parameters: ConnectKitProviderProps) => React.FunctionComponentElement<React.ProviderProps<ContextValue | null>>;
export declare const useContext: () => ContextValue;
export {};
