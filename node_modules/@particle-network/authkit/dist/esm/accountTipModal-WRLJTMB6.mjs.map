{
  "version": 3,
  "sources": ["../../src/pages/account/accountTipModal/index.tsx"],
  "sourcesContent": ["import { Button, Modal } from 'antd';\nimport React from 'react';\nimport { PromptSettingType } from '../../../api/model/bundle';\nimport CircleClose from '../../../components/icon/circle-close';\nimport { useAuthCoreModal, useParticleAuth, useTranslation } from '../../../context';\nimport styles from './index.less';\nexport interface AccountTipModalProps {\n  visible: boolean;\n  confirm?: () => void;\n}\n\nconst AccountTipModal = ({ modal }: { modal: AccountTipModalProps }) => {\n  const { visible, confirm } = modal;\n  const { t } = useTranslation();\n  const { setPaymentPassword, showAccountTipModal, modalOptions } = useParticleAuth();\n  const { authCoreModal } = useAuthCoreModal();\n  const setPassword = () => {\n    showAccountTipModal({\n      visible: false,\n    });\n    setPaymentPassword();\n  };\n\n  const continueConfirm = () => {\n    confirm?.();\n    showAccountTipModal({\n      visible: false,\n    });\n  };\n\n  return (\n    <>\n      <style>{styles as unknown as string}</style>\n      <Modal\n        open={visible}\n        closable={false}\n        centered={true}\n        okButtonProps={{ style: { display: 'none' } }}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        width={'90%'}\n        getContainer={() => {\n          return authCoreModal.rootBody as HTMLElement;\n        }}\n      >\n        <div className='wrong-password-content'>\n          <CircleClose\n            className='close-icon'\n            onClick={() =>\n              showAccountTipModal({\n                visible: false,\n              })\n            }\n          />\n          <h3 className='modal-title m-margin-top-20'>{t('account.account_modal1_title')}</h3>\n          <div className='tip'>{t('account.account_modal1_tip')}</div>\n          <Button className='btn' onClick={setPassword}>\n            {t('account.account_modal1_btn1')}\n          </Button>\n          {\n            // \u5F3A\u5236\u8BBE\u7F6E\u652F\u4ED8\u5BC6\u7801\uFF0C\u9690\u85CF\u8DF3\u8FC7\u6309\u94AE\n            modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign !==\n              PromptSettingType.everyAndNotSkip && (\n              <Button className='btn cancel' onClick={continueConfirm}>\n                {t('account.account_modal1_btn2')}\n              </Button>\n            )\n          }\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default AccountTipModal;\n"],
  "mappings": ";;;;;;;;;;AAAA,SAAS,QAAQ,aAAa;AAC9B,OAAO,WAAW;;;;;;AAUlB,IAAM,kBAAkB,CAAC,EAAE,MAAM,MAAuC;AAXxE;AAYE,QAAM,EAAE,SAAS,QAAQ,IAAI;AAC7B,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,oBAAoB,qBAAqB,aAAa,IAAI,gBAAgB;AAClF,QAAM,EAAE,cAAc,IAAI,iBAAiB;AAC3C,QAAM,cAAc,MAAM;AACxB,wBAAoB;AAAA,MAClB,SAAS;AAAA,IACX,CAAC;AACD,uBAAmB;AAAA,EACrB;AAEA,QAAM,kBAAkB,MAAM;AAC5B;AACA,wBAAoB;AAAA,MAClB,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AAEA,SACE,0DACE,oCAAC,eAAO,uBAA4B,GACpC;AAAA,IAAC;AAAA;AAAA,MACC,MAAM;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA,MACV,eAAe,EAAE,OAAO,EAAE,SAAS,OAAO,EAAE;AAAA,MAC5C,mBAAmB,EAAE,OAAO,EAAE,SAAS,OAAO,EAAE;AAAA,MAChD,OAAO;AAAA,MACP,cAAc,MAAM;AAClB,eAAO,cAAc;AAAA,MACvB;AAAA;AAAA,IAEA,oCAAC,SAAI,WAAU,4BACb;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MACP,oBAAoB;AAAA,UAClB,SAAS;AAAA,QACX,CAAC;AAAA;AAAA,IAEL,GACA,oCAAC,QAAG,WAAU,iCAA+B,EAAE,8BAA8B,CAAE,GAC/E,oCAAC,SAAI,WAAU,SAAO,EAAE,4BAA4B,CAAE,GACtD,oCAAC,UAAO,WAAU,OAAM,SAAS,eAC9B,EAAE,6BAA6B,CAClC,KAGE,kBAAa,wBAAb,mBAAkC,qEAEhC,oCAAC,UAAO,WAAU,cAAa,SAAS,mBACrC,EAAE,6BAA6B,CAClC,CAGN;AAAA,EACF,CACF;AAEJ;AAEA,IAAOA,2BAAQ;",
  "names": ["accountTipModal_default"]
}
