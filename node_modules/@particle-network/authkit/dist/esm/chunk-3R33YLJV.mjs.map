{
  "version": 3,
  "sources": ["../../src/components/input-password/index.tsx", "../../src/components/eyeIcon/index.tsx"],
  "sourcesContent": ["import { Input } from 'antd';\nimport React from 'react';\nimport { isAutoFocusSupported } from '../../utils';\nimport { isNullish } from '../../utils/common-utils';\nimport { EyeClose, EyeOpen } from '../eyeIcon';\nimport styles from './index.less';\n\ntype Prop = {\n  className?: string;\n  maxLength?: number;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n  onPressEnter?: (event: any) => void;\n  onBlur?: (event: any) => void;\n  autoFocus?: boolean;\n};\n\nconst InputPassword = (prop: Prop) => {\n  const inputRef = React.useRef<any>(null);\n\n  return (\n    <>\n      <div className='password-input-0'>\n        <Input.Password />\n      </div>\n\n      <style>{`\n        ${styles as unknown as string}\n        .password-input .ant-input-password {\n          background-image: none !important;\n        }\n        .password-input .ant-input-password input {\n          -webkit-text-fill-color: inherit !important;\n          opacity: 1 !important;\n        }\n      `}</style>\n      <Input.Password\n        ref={inputRef}\n        className={'password-input' + (prop?.className ? ` ${prop?.className}` : '')}\n        iconRender={(visible) =>\n          visible ? (\n            <div>\n              <EyeOpen />\n            </div>\n          ) : (\n            <div>\n              <EyeClose />\n            </div>\n          )\n        }\n        onChange={(e) => {\n          if (prop?.onChange) {\n            prop?.onChange?.(e.target.value);\n          }\n        }}\n        defaultValue={prop?.defaultValue}\n        maxLength={prop?.maxLength || 20}\n        onPressEnter={(e) => prop?.onPressEnter?.(e)}\n        onBlur={(e) => prop?.onBlur?.(e)}\n        autoFocus={isNullish(prop?.autoFocus) && isAutoFocusSupported() ? true : prop?.autoFocus}\n      />\n    </>\n  );\n};\n\nexport default InputPassword;\n", "import React from 'react';\nimport SVGIcon from '../icon/svg-icon';\nimport styles from './index.less';\n\nconst EyeOpen = () => {\n  return (\n    <>\n      <style>{styles as unknown as string}</style>\n      <SVGIcon className='icon-eye' name='eye_open' />\n    </>\n  );\n};\nconst EyeClose = () => {\n  return (\n    <>\n      <style>{styles as unknown as string}</style>\n      <SVGIcon className='icon-eye' name='eye_close' />\n    </>\n  );\n};\n\nexport { EyeClose, EyeOpen };\n"],
  "mappings": ";;;;;;;;;;AAAA,SAAS,aAAa;AACtB,OAAOA,YAAW;;;ACDlB,OAAO,WAAW;;;;;;AAIlB,IAAM,UAAU,MAAM;AACpB,SACE,0DACE,oCAAC,eAAO,eAA4B,GACpC,oCAAC,oBAAQ,WAAU,YAAW,MAAK,YAAW,CAChD;AAEJ;AACA,IAAM,WAAW,MAAM;AACrB,SACE,0DACE,oCAAC,eAAO,eAA4B,GACpC,oCAAC,oBAAQ,WAAU,YAAW,MAAK,aAAY,CACjD;AAEJ;;;;;;ADFA,IAAM,gBAAgB,CAAC,SAAe;AACpC,QAAM,WAAWC,OAAM,OAAY,IAAI;AAEvC,SACE,gBAAAA,OAAA,cAAAA,OAAA,gBACE,gBAAAA,OAAA,cAAC,SAAI,WAAU,sBACb,gBAAAA,OAAA,cAAC,MAAM,UAAN,IAAe,CAClB,GAEA,gBAAAA,OAAA,cAAC,eAAO;AAAA,UACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQF,GACF,gBAAAA,OAAA;AAAA,IAAC,MAAM;AAAA,IAAN;AAAA,MACC,KAAK;AAAA,MACL,WAAW,qBAAoB,6BAAM,aAAY,IAAI,6BAAM,cAAc;AAAA,MACzE,YAAY,CAAC,YACX,UACE,gBAAAA,OAAA,cAAC,aACC,gBAAAA,OAAA,cAAC,aAAQ,CACX,IAEA,gBAAAA,OAAA,cAAC,aACC,gBAAAA,OAAA,cAAC,cAAS,CACZ;AAAA,MAGJ,UAAU,CAAC,MAAM;AAlDzB;AAmDU,YAAI,6BAAM,UAAU;AAClB,6CAAM,aAAN,8BAAiB,EAAE,OAAO;AAAA,QAC5B;AAAA,MACF;AAAA,MACA,cAAc,6BAAM;AAAA,MACpB,YAAW,6BAAM,cAAa;AAAA,MAC9B,cAAc,CAAC,MAAG;AAzD1B;AAyD6B,kDAAM,iBAAN,8BAAqB;AAAA;AAAA,MAC1C,QAAQ,CAAC,MAAG;AA1DpB;AA0DuB,kDAAM,WAAN,8BAAe;AAAA;AAAA,MAC9B,WAAW,UAAU,6BAAM,SAAS,KAAK,qBAAqB,IAAI,OAAO,6BAAM;AAAA;AAAA,EACjF,CACF;AAEJ;AAEA,IAAOC,0BAAQ;",
  "names": ["React", "React", "input_password_default"]
}
