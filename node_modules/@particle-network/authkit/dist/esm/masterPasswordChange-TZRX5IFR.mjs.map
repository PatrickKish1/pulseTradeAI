{
  "version": 3,
  "sources": ["../../src/pages/account/masterPasswordChange/index.tsx"],
  "sourcesContent": ["import { verifyMasterPassword } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Button, Form, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport Header from '../../../components/header';\nimport InputPassword from '../../../components/input-password';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useTranslation } from '../../../context';\nimport useMessage from '../../../context/hooks/useMessage';\nimport styles from './index.less';\n\nconst MasterPasswordChange = () => {\n  const navigate = useCustomNavigate();\n  const { t } = useTranslation();\n  const { Text, Link } = Typography;\n\n  const [showError, setShowError] = useState(false);\n  const message = useMessage();\n  const [nextDisabled, setNextDisabled] = useState(true);\n\n  const { run: runCheckMasterPassword, loading } = useRequest(\n    (password: string) => {\n      return verifyMasterPassword(password).then((res) => {\n        if (!res) {\n          throw new Error('Master password decryption error');\n        }\n        return res;\n      });\n    },\n    {\n      manual: true,\n      onSuccess: (result) => {\n        setNewMasterPassword();\n      },\n      onError: (error) => {\n        console.log('checkMasterPassword error', error);\n        if (error?.message === 'Master password decryption error') {\n          setShowError(true);\n        } else {\n          message.error(error?.message || 'check master password error');\n        }\n      },\n    }\n  );\n\n  const setNewMasterPassword = () => {\n    navigate('/account/master-password', {\n      state: {\n        setNewMasterPassword: true,\n      },\n    });\n  };\n\n  const onInputFinish = (values: any) => {\n    const { password } = values;\n    if (password && password.length >= 6 && password.length <= 20) {\n      runCheckMasterPassword(password);\n    } else {\n      setShowError(true);\n    }\n  };\n\n  const onValuesChange = (values: any) => {\n    setShowError(false);\n    const { password } = values;\n    setNextDisabled(!password);\n  };\n\n  const toDecription = () => {\n    navigate('/account/master-password/description');\n  };\n\n  return (\n    <div className='mp-change-container'>\n      <style>{styles as unknown as string}</style>\n      <Header displayBackBtn={true}>{t('account.current_master_password')}</Header>\n      <div className='wapper'>\n        <Form onFinish={onInputFinish} layout='vertical' onValuesChange={onValuesChange}>\n          <div className='scroll-content'>\n            <div className='mp-input-name padding-top-16'>{t('account.input_master_password')}</div>\n            <Form.Item name='password'>\n              <InputPassword className='mp-input' />\n            </Form.Item>\n            {showError && <div className='mp-input-error'>{t('account.password_error')}</div>}\n            <Space direction='vertical' className='mp-tip-space'>\n              <Text>{t('account.mpc_tss_intro')}</Text>\n              <Text>\n                {t('account.input_decrypt_hint')}{' '}\n                <Link onClick={toDecription} className='more-text-btn'>\n                  {t('account.learn_more_period')}\n                </Link>\n              </Text>\n            </Space>\n          </div>\n          <Form.Item>\n            <div className='bottom-container'>\n              <Button className='primary-antd-btn mp-next' htmlType='submit' loading={loading} disabled={nextDisabled}>\n                {t('common.next')}\n              </Button>\n              <PowerFooter />\n            </div>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default MasterPasswordChange;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,SAAS,4BAA4B;AACrC,SAAS,kBAAkB;AAC3B,SAAS,QAAQ,MAAM,OAAO,kBAAkB;AAChD,OAAO,SAAS,gBAAgB;;;;;;AAQhC,IAAM,uBAAuB,MAAM;AACjC,QAAM,WAAW,kBAAkB;AACnC,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,MAAM,KAAK,IAAI;AAEvB,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAChD,QAAM,UAAU,mBAAW;AAC3B,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS,IAAI;AAErD,QAAM,EAAE,KAAK,wBAAwB,QAAQ,IAAI;AAAA,IAC/C,CAAC,aAAqB;AACpB,aAAO,qBAAqB,QAAQ,EAAE,KAAK,CAAC,QAAQ;AAClD,YAAI,CAAC,KAAK;AACR,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACpD;AACA,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,WAAW,CAAC,WAAW;AACrB,6BAAqB;AAAA,MACvB;AAAA,MACA,SAAS,CAAC,UAAU;AAClB,gBAAQ,IAAI,6BAA6B,KAAK;AAC9C,aAAI,+BAAO,aAAY,oCAAoC;AACzD,uBAAa,IAAI;AAAA,QACnB,OAAO;AACL,kBAAQ,OAAM,+BAAO,YAAW,6BAA6B;AAAA,QAC/D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,uBAAuB,MAAM;AACjC,aAAS,4BAA4B;AAAA,MACnC,OAAO;AAAA,QACL,sBAAsB;AAAA,MACxB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,QAAM,gBAAgB,CAAC,WAAgB;AACrC,UAAM,EAAE,SAAS,IAAI;AACrB,QAAI,YAAY,SAAS,UAAU,KAAK,SAAS,UAAU,IAAI;AAC7D,6BAAuB,QAAQ;AAAA,IACjC,OAAO;AACL,mBAAa,IAAI;AAAA,IACnB;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,WAAgB;AACtC,iBAAa,KAAK;AAClB,UAAM,EAAE,SAAS,IAAI;AACrB,oBAAgB,CAAC,QAAQ;AAAA,EAC3B;AAEA,QAAM,eAAe,MAAM;AACzB,aAAS,sCAAsC;AAAA,EACjD;AAEA,SACE,oCAAC,SAAI,WAAU,yBACb,oCAAC,eAAO,4BAA4B,GACpC,oCAAC,kBAAO,gBAAgB,QAAO,EAAE,iCAAiC,CAAE,GACpE,oCAAC,SAAI,WAAU,YACb,oCAAC,QAAK,UAAU,eAAe,QAAO,YAAW,kBAC/C,oCAAC,SAAI,WAAU,oBACb,oCAAC,SAAI,WAAU,kCAAgC,EAAE,+BAA+B,CAAE,GAClF,oCAAC,KAAK,MAAL,EAAU,MAAK,cACd,oCAAC,0BAAc,WAAU,YAAW,CACtC,GACC,aAAa,oCAAC,SAAI,WAAU,oBAAkB,EAAE,wBAAwB,CAAE,GAC3E,oCAAC,SAAM,WAAU,YAAW,WAAU,kBACpC,oCAAC,YAAM,EAAE,uBAAuB,CAAE,GAClC,oCAAC,YACE,EAAE,4BAA4B,GAAG,KAClC,oCAAC,QAAK,SAAS,cAAc,WAAU,mBACpC,EAAE,2BAA2B,CAChC,CACF,CACF,CACF,GACA,oCAAC,KAAK,MAAL,MACC,oCAAC,SAAI,WAAU,sBACb,oCAAC,UAAO,WAAU,4BAA2B,UAAS,UAAS,SAAkB,UAAU,gBACxF,EAAE,aAAa,CAClB,GACA,oCAAC,0BAAY,CACf,CACF,CACF,CACF,CACF;AAEJ;AAEA,IAAOA,gCAAQ;",
  "names": ["masterPasswordChange_default"]
}
