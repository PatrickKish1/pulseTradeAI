import type { Chain as ViemChain } from 'viem';
import type { EIP1559TxData, TxData } from '../api/types';
import { fromHex as tronAddressFromHex, toHex as tronAddressToHex } from './tron/crypto';
export declare const defaultTokenIcon = "https://static.particle.network/token-list/defaultToken/default.png";
export declare const solana: {
    blockExplorers: {
        readonly default: {
            readonly name: "Explorer";
            readonly url: "https://solscan.io";
        };
    };
    contracts?: {
        [x: string]: import("viem").ChainContract | {
            [sourceId: number]: import("viem").ChainContract | undefined;
        } | undefined;
        ensRegistry?: import("viem").ChainContract | undefined;
        ensUniversalResolver?: import("viem").ChainContract | undefined;
        multicall3?: import("viem").ChainContract | undefined;
    } | undefined;
    id: 101;
    name: "Solana";
    nativeCurrency: {
        readonly decimals: 9;
        readonly name: "Solana SOL";
        readonly symbol: "SOL";
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://api.mainnet-beta.solana.com"];
        };
    };
    sourceId?: number | undefined;
    testnet?: boolean | undefined;
    custom: {
        readonly chainType: "solana";
    };
    fees?: import("viem").ChainFees<undefined> | undefined;
    formatters?: undefined;
    serializers?: import("viem").ChainSerializers<undefined, import("viem").TransactionSerializable> | undefined;
};
export type Chain = {
    id: number;
    name: string;
};
export declare function isTron(chain: string | number | Chain): boolean;
export { tronAddressFromHex, tronAddressToHex };
export declare function getChainInfo(chain: Chain): ViemChain | undefined;
export declare const getChainType: (chain: ViemChain) => "evm" | "solana";
export declare const getEvmChains: () => ViemChain[];
export declare const getSolanaChains: () => ViemChain[];
export declare const getEVMChainInfoById: (id: number) => ViemChain | undefined;
export declare const getChainIcon: (chain: ViemChain | Chain) => string;
export declare const isChainSupportEIP1559: (data: TxData | EIP1559TxData) => boolean;
export declare const getSolanaChainInfoById: (id: number) => ViemChain | undefined;
export declare const isSolanaChain: (chain: Chain | number) => boolean;
