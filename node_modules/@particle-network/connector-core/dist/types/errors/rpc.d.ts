import type { Prettify } from 'viem/chains';
import { BaseError } from './base';
export type RpcErrorCode = -1 | -32700 | -32600 | -32601 | -32602 | -32603 | -32000 | -32001 | -32002 | -32003 | -32004 | -32005 | -32006 | -32042;
export type ProviderRpcErrorCode = 4001 | 4100 | 4200 | 4900 | 4901 | 4902;
type RpcErrorOptions<TCode extends number = RpcErrorCode> = {
    code?: TCode | undefined;
    docsPath?: string | undefined;
    metaMessages?: string[] | undefined;
    shortMessage: string;
};
export declare class RpcError<TCode extends number = RpcErrorCode> extends BaseError {
    name: string;
    code: TCode | number;
    constructor(cause: Error, { code, metaMessages, shortMessage }: RpcErrorOptions<TCode>);
}
export declare class ProviderRpcError<T = undefined> extends RpcError<ProviderRpcErrorCode> {
    name: string;
    data?: T | undefined;
    constructor(cause: Error, options: Prettify<RpcErrorOptions<ProviderRpcErrorCode> & {
        data?: T | undefined;
    }>);
}
export type UserRejectedRequestErrorType = UserRejectedRequestError & {
    code: 4001;
    name: 'UserRejectedRequestError';
};
export declare class UserRejectedRequestError extends ProviderRpcError {
    name: string;
    static code: 4001;
    constructor(cause: Error);
}
/**
 * Subclass for an "Unauthorized" EIP-1193 error.
 *
 * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors
 */
export type UnauthorizedProviderErrorType = UnauthorizedProviderError & {
    code: 4100;
    name: 'UnauthorizedProviderError';
};
export declare class UnauthorizedProviderError extends ProviderRpcError {
    name: string;
    static code: 4100;
    constructor(cause: Error);
}
/**
 * Subclass for an "Unsupported Method" EIP-1193 error.
 *
 * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors
 */
export type UnsupportedProviderMethodErrorType = UnsupportedProviderMethodError & {
    code: 4200;
    name: 'UnsupportedProviderMethodError';
};
export declare class UnsupportedProviderMethodError extends ProviderRpcError {
    name: string;
    static code: 4200;
    constructor(cause: Error);
}
/**
 * Subclass for an "Disconnected" EIP-1193 error.
 *
 * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors
 */
export type ProviderDisconnectedErrorType = ProviderDisconnectedError & {
    code: 4900;
    name: 'ProviderDisconnectedError';
};
export declare class ProviderDisconnectedError extends ProviderRpcError {
    name: string;
    static code: 4900;
    constructor(cause: Error);
}
/**
 * Subclass for an "Chain Disconnected" EIP-1193 error.
 *
 * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors
 */
export type ChainDisconnectedErrorType = ChainDisconnectedError & {
    code: 4901;
    name: 'ChainDisconnectedError';
};
export declare class ChainDisconnectedError extends ProviderRpcError {
    name: string;
    static code: 4901;
    constructor(cause: Error);
}
/**
 * Subclass for an "Switch Chain" EIP-1193 error.
 *
 * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors
 */
export type SwitchChainErrorType = SwitchChainError & {
    code: 4902;
    name: 'SwitchChainError';
};
export declare class SwitchChainError extends ProviderRpcError {
    name: string;
    static code: 4902;
    constructor(cause: Error);
}
/**
 * Subclass for an unknown RPC error.
 */
export type UnknownRpcErrorType = UnknownRpcError & {
    name: 'UnknownRpcError';
};
export declare class UnknownRpcError extends RpcError {
    name: string;
    constructor(cause: Error);
}
export {};
