{
  "version": 3,
  "sources": ["../../src/pages/account/setPaymentPassword/index.tsx"],
  "sourcesContent": ["import { useRequest } from 'ahooks';\nimport { Button } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useCustomNavigate, useTranslation } from '../../../context';\nimport ParticleKeywords from '../ParticleKeywords/index';\n\nimport { updatePaymentPassword } from '@particle-network/auth-core';\nimport React from 'react';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport { useError } from '../../../context/hooks/useError';\nimport { PageType } from '../accountVerify/config';\nimport styles from './index.less';\n\nconst SetPaymentPassword = (props: any) => {\n  const navigate = useCustomNavigate();\n  const { t } = useTranslation();\n  const state = props;\n  // 1. loading  3. password  4,success 5. check 6. code 7  confirm password\n  type StepType = 'loading' | 'password' | 'success' | 'check' | 'code' | 'confirm';\n  const [step, setStep] = useState<StepType>('loading');\n  const [codeVal, setCodeVal] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordMistake, setPasswordMistake] = useState<boolean>();\n  const [passwordMatched, setPasswordMatched] = useState<boolean>(false);\n  const { errorHandle } = useError();\n\n  const { loading: updateLoading, run: runUpdate } = useRequest(updatePaymentPassword, {\n    manual: true,\n    onSuccess: () => {\n      navigate(-1);\n    },\n    onError: (error: any) => {\n      console.log('update password error', error);\n      errorHandle(error);\n      if (error?.error_code === 50104) {\n        setCodeVal('');\n        setPassword('');\n        setPasswordMistake(false);\n        setStep('password');\n      }\n    },\n  });\n\n  useEffect(() => {\n    setStep('password');\n  }, []);\n\n  const checkPassword = (value: string) => {\n    if (value.length === 6) {\n      if (value === password) {\n        setCodeVal(value);\n        setPasswordMatched(true);\n      } else {\n        setCodeVal('');\n        setPassword('');\n        setPasswordMistake(true);\n        setStep('password');\n        setPasswordMatched(false);\n      }\n    } else {\n      setCodeVal(value);\n      setPasswordMatched(false);\n    }\n  };\n\n  const submitPassword = () => {\n    if ((state as any)?.account) {\n      //reset password\n      navigate('/account/verify', {\n        state: {\n          account: (state as any)?.account,\n          password: codeVal,\n          pageType: PageType.ResetPaymentPassword,\n        },\n      });\n    } else if ((state as any)?.oldPassword) {\n      //change password\n      const oldPassword = (state as any)?.oldPassword;\n      const password = codeVal;\n      runUpdate({\n        password: password,\n        oldPassword: oldPassword,\n      });\n    }\n  };\n\n  if (step === 'confirm') {\n    return (\n      <div className='set-password-container'>\n        <style>{styles as unknown as string}</style>\n        <SVGIcon className='icon-navigation-back' name='circle_back' onClick={() => navigate(-1)} />\n        <h2 className='payment-title'>{t('account.set_payment_password')}</h2>\n        <p className='payment-desc-1'>{t('account.re_enter_confirm')}</p>\n        <div className='keyboard-container'>\n          <ParticleKeywords onChange={checkPassword} value={codeVal}></ParticleKeywords>\n        </div>\n        <div className='payment-buttons2'>\n          <Button\n            className='payment-main-button2'\n            disabled={!passwordMatched}\n            loading={(state as any)?.oldPassword ? updateLoading : false}\n            onClick={submitPassword}\n          >\n            {t('account.done')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <style>{styles as unknown as string}</style>\n      <div className='set-password-container'>\n        <SVGIcon className='icon-navigation-back' name='circle_back' onClick={() => navigate(-1)} />\n        <h2 className='payment-title'>{t('account.set_payment_password')}</h2>\n        <p className='payment-desc-1'>{t('account.set_payment_password_tip')}</p>\n        <div className='keyboard-container'>\n          <ParticleKeywords\n            onChange={(e) => {\n              setPassword(e);\n              if (e.length > 5) {\n                setPasswordMistake(false);\n                setPasswordMatched(false);\n                setStep('confirm');\n              }\n            }}\n            value={password}\n          ></ParticleKeywords>\n        </div>\n\n        {passwordMistake && <div className='password-mistake'>{t('account.password_do_not_match')}</div>}\n      </div>\n    </>\n  );\n};\n\nexport default SetPaymentPassword;\n"],
  "mappings": "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",
  "names": ["password", "setPaymentPassword_default"]
}
