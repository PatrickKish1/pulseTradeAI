import type { PasskeyOption } from '@particle-network/aa';
import { type Storage } from '@particle-network/connector-core';
interface RequestArguments {
    method: string;
    params?: any[];
}
export type PasskeyStorageItem = {
    'passkey.options': PasskeyOption;
    'passkey.chainId': number;
};
export declare class PasskeyProvider {
    #private;
    isPasskey: boolean;
    constructor({ storage }: {
        storage: Storage<PasskeyStorageItem>;
    });
    on(event: string, fn: any): this;
    removeListener(event: string, fn: any): this;
    request(payload: RequestArguments): Promise<any>;
    getPasskeyOption(): Promise<PasskeyOption | null>;
    signMessage(message: string): Promise<string>;
}
export {};
