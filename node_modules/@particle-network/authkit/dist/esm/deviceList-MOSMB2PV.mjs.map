{
  "version": 3,
  "sources": ["../../src/pages/manageDevices/deviceList/index.tsx"],
  "sourcesContent": ["import { getAuthorizationDApps } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Skeleton } from 'antd';\nimport dayjs from 'dayjs';\nimport React, { useEffect } from 'react';\nimport Header from '../../../components/header';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useModalOptions, useTranslation } from '../../../context';\nimport { useCustomize } from '../../../context/hooks';\nimport styles from './index.less';\n\nconst DeviceList = () => {\n  const { t } = useTranslation();\n  const navigate = useCustomNavigate();\n  const { modalOptions } = useModalOptions();\n  const { language } = useCustomize();\n  const {\n    loading,\n    data: deviceList = [],\n    run: getAuthorizationsRequest,\n  } = useRequest(\n    () => {\n      return getAuthorizationDApps().then((list) => {\n        return list.map((item) => {\n          if (item.updated_at) {\n            // eslint-disable-next-line camelcase\n            item.updated_at = dayjs(new Date(item.updated_at)).format('YYYY/MM/DD HH:mm');\n          }\n          if (modalOptions.projectId === item.project_app_uuid || modalOptions.appId === item.project_app_uuid) {\n            item.isCurrent = true;\n          }\n          if (item.login_channel) {\n            // eslint-disable-next-line camelcase\n            item.login_channel = item.login_channel.replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\n          }\n          if (item?.location?.country_code) {\n            try {\n              // eslint-disable-next-line camelcase\n              item.location.country_name = new Intl.DisplayNames([language || 'en'], {\n                type: 'region',\n              }).of(item?.location?.country_code);\n            } catch (error) {\n              console.log('Intl.DisplayNames', error);\n            }\n          }\n          return item;\n        });\n      });\n    },\n    {\n      cacheKey: 'getAuthorizations',\n      manual: true,\n    }\n  );\n\n  useEffect(() => {\n    getAuthorizationsRequest();\n  }, []);\n\n  return (\n    <div className='device-list-container'>\n      <style>{styles as unknown as string}</style>\n      <Header displayBackBtn={true}>{t('new.authorization')}</Header>\n      <div className='scroll-wrapper'>\n        <div className='devices-description'>{t('new.authorization_tips')}</div>\n        {loading ? (\n          <div className='device-list'>\n            <Skeleton />\n          </div>\n        ) : (\n          <div className='device-list'>\n            {deviceList?.map((item, index) => {\n              return (\n                <div\n                  className='item'\n                  key={index}\n                  onClick={() => {\n                    navigate('/manageDevices/deviceDetails', {\n                      state: {\n                        loginDeviceInfo: item,\n                      },\n                    });\n                  }}\n                >\n                  <div className='left'>\n                    <div className='wrap'>\n                      <div className='s-row device'>{item.project_app_name}</div>\n                      <div className='s-row created_at'>{item.updated_at}</div>\n                    </div>\n                  </div>\n                  <div className='right'>\n                    {item.isCurrent && <div className='current-icon'>{t('new.current')}</div>}\n                    <SVGIcon className='arrow-right-icon' name='arrow_right_icon' />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n      <PowerFooter className='footer-box-v2' />\n    </div>\n  );\n};\n\nexport default DeviceList;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,SAAS,6BAA6B;AACtC,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,OAAO,WAAW;AAClB,OAAO,SAAS,iBAAiB;;;;;;AAQjC,IAAM,aAAa,MAAM;AACvB,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,WAAW,kBAAkB;AACnC,QAAM,EAAE,aAAa,IAAI,gBAAgB;AACzC,QAAM,EAAE,SAAS,IAAI,aAAa;AAClC,QAAM;AAAA,IACJ;AAAA,IACA,MAAM,aAAa,CAAC;AAAA,IACpB,KAAK;AAAA,EACP,IAAI;AAAA,IACF,MAAM;AACJ,aAAO,sBAAsB,EAAE,KAAK,CAAC,SAAS;AAC5C,eAAO,KAAK,IAAI,CAAC,SAAS;AAxBlC;AAyBU,cAAI,KAAK,YAAY;AAEnB,iBAAK,aAAa,MAAM,IAAI,KAAK,KAAK,UAAU,CAAC,EAAE,OAAO,kBAAkB;AAAA,UAC9E;AACA,cAAI,aAAa,cAAc,KAAK,oBAAoB,aAAa,UAAU,KAAK,kBAAkB;AACpG,iBAAK,YAAY;AAAA,UACnB;AACA,cAAI,KAAK,eAAe;AAEtB,iBAAK,gBAAgB,KAAK,cAAc,QAAQ,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC;AAAA,UACvF;AACA,eAAI,kCAAM,aAAN,mBAAgB,cAAc;AAChC,gBAAI;AAEF,mBAAK,SAAS,eAAe,IAAI,KAAK,aAAa,CAAC,YAAY,IAAI,GAAG;AAAA,gBACrE,MAAM;AAAA,cACR,CAAC,EAAE,IAAG,kCAAM,aAAN,mBAAgB,YAAY;AAAA,YACpC,SAAS,OAAP;AACA,sBAAQ,IAAI,qBAAqB,KAAK;AAAA,YACxC;AAAA,UACF;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,QAAQ;AAAA,IACV;AAAA,EACF;AAEA,YAAU,MAAM;AACd,6BAAyB;AAAA,EAC3B,GAAG,CAAC,CAAC;AAEL,SACE,oCAAC,SAAI,WAAU,2BACb,oCAAC,eAAO,kBAA4B,GACpC,oCAAC,kBAAO,gBAAgB,QAAO,EAAE,mBAAmB,CAAE,GACtD,oCAAC,SAAI,WAAU,oBACb,oCAAC,SAAI,WAAU,yBAAuB,EAAE,wBAAwB,CAAE,GACjE,UACC,oCAAC,SAAI,WAAU,iBACb,oCAAC,cAAS,CACZ,IAEA,oCAAC,SAAI,WAAU,iBACZ,yCAAY,IAAI,CAAC,MAAM,UAAU;AAChC,WACE;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,KAAK;AAAA,QACL,SAAS,MAAM;AACb,mBAAS,gCAAgC;AAAA,YACvC,OAAO;AAAA,cACL,iBAAiB;AAAA,YACnB;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA,MAEA,oCAAC,SAAI,WAAU,UACb,oCAAC,SAAI,WAAU,UACb,oCAAC,SAAI,WAAU,kBAAgB,KAAK,gBAAiB,GACrD,oCAAC,SAAI,WAAU,sBAAoB,KAAK,UAAW,CACrD,CACF;AAAA,MACA,oCAAC,SAAI,WAAU,WACZ,KAAK,aAAa,oCAAC,SAAI,WAAU,kBAAgB,EAAE,aAAa,CAAE,GACnE,oCAAC,oBAAQ,WAAU,oBAAmB,MAAK,oBAAmB,CAChE;AAAA,IACF;AAAA,EAEJ,EACF,CAEJ,GACA,oCAAC,wBAAY,WAAU,iBAAgB,CACzC;AAEJ;AAEA,IAAOA,sBAAQ;",
  "names": ["deviceList_default"]
}
